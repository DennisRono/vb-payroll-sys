<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>